pipeline:
  auth:
    image: scottlackey/drone-auth-ecr
    commands:
      - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - aws ecr get-login --region us-east-1 | bash
      - docker run 404825630592.dkr.ecr.us-east-1.amazonaws.com/blinemedical/meteor-scripts:meteor-scripts-master.1.1.0-dev.14882 postgres/db.js deploy --host=$POSTGRES_HOST -u="$POSTGRES_USER" -p="$POSTGRES_PASSWORD" -d="$POSTGRES_DATABASE"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
    secrets: [ AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, POSTGRES_HOST, POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DATABASE ]

  # deploy_database:
  #   image: scottlackey/drone-auth-ecr
  #   commands:
  #     - docker run 404825630592.dkr.ecr.us-east-1.amazonaws.com/blinemedical/meteor-scripts:meteor-scripts-master.1.1.0-dev.14882 postgres/db.js deploy --host=$POSTGRES_HOST -u="$POSTGRES_USER" -p="$POSTGRES_PASSWORD" -d="$POSTGRES_DATABASE"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   secrets: [ POSTGRES_HOST, POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DATABASE ]
  
  deploy_meteor:
    image: scottlackey/drone-auth-ecr
    commands:
      - docker run -e AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" -e AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" 404825630592.dkr.ecr.us-east-1.amazonaws.com/meteor-registry:ecs-deploy -n api-MET-3275-has-rows -k "$AWS_ACCESS_KEY_ID" -s "$AWS_SECRET_ACCESS_KEY" -r "us-east-1" -c "api-feature-cluster" -i "404825630592.dkr.ecr.us-east-1.amazonaws.com/blinemedical/meteor-api:meteor-api-MET-3275-has-rows.1.0.2-dev.13756"
      - docker run -e AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" -e AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" 404825630592.dkr.ecr.us-east-1.amazonaws.com/meteor-registry:ecs-deploy -n ui-MET-3275-has-rows -k "$AWS_ACCESS_KEY_ID" -s "$AWS_SECRET_ACCESS_KEY" -r "us-east-1" -c "ui-feature-cluster" -i "404825630592.dkr.ecr.us-east-1.amazonaws.com/blinemedical/meteor-ui:meteor-ui-MET-3275-has-rows.1.0.2-dev.13756"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets: [ AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY ]